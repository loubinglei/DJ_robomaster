
/***************************** Include Files *********************************/

#include"main.h"
//CAN BUS
#define CAN_0_DEVICE_ID		XPAR_XCANPS_0_DEVICE_ID
#define CAN_1_DEVICE_ID	    XPAR_XCANPS_1_DEVICE_ID


XCanPs Can;
//XCanPs *CanInstPtr = &Can;
XCanPs *CanInstPtr_0 = &Can;
XCanPs *CanInstPtr_1 = &Can;

u8 send = 1;
u8 rece[30] = {0};
/****************************************************************************/
/**
*
* This function is the main function of the Can polled example.
*
* @param	None
*
* @return
*		- XST_SUCCESS if the example has completed successfully.
*		- XST_FAILURE if the example has failed.
*
* @note		None
*
*****************************************************************************/
int main()
{
	int Status;
	int i;
	Uart_polled_Initialize(&Uart_Ps,UART_DEVICE_ID);
	//Uart_Intr_Initialize(&InterruptController, &Uart_Ps,\
	//		UART_DEVICE_ID, UART_INT_IRQ_ID);
	//ScuTimerIntrExample(&IntcInstance, &TimerInstance,TIMER_DEVICE_ID, TIMER_IRPT_INTR);
	//xil_printf("CAN Polled Mode Example Test \r\n");
	//Status = CanPs_Polled_init(CAN_1_DEVICE_ID, CanInstPtr_1);
	//if (Status != XST_SUCCESS) {
	//	xil_printf("CAN Polled Mode Example Test Failed\r\n");
	//	return XST_FAILURE;
	//}

		//SendFrame(CanInstPtr_1);
		while(1)
		{
			//for(i=0;i<100000000;i++){;}
			//i=0;
			 printf("%d %d %d %d %d %d %d %d\r\n",rece[0],rece[1],\
					 rece[2],rece[3],\
					 rece[4],rece[5],\
					 rece[13],rece[15]\
			);

			XUartPs_Recv(&Uart_Ps, rece, 10);
			//SendFrame(CanInstPtr_1);
		}

	xil_printf("Successfully ran CAN Polled Mode Example Test\r\n");
	return XST_SUCCESS;
}
