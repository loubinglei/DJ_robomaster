#include"main.h"
//#include "sleep.h"

XIicPs Iic;
u8 SendBuffer_IIC[TEST_BUFFER_SIZE_IIC]; /**< Buffer for Transmitting Data */
u8   MPU6050_receive_L[3];  //
u8   MPU6050_receive_H[3];  //
u16  MPU6050_receive[3];  //

 int IIC_Init(XIicPs *IicInstPtr,u16 DeviceId)
 {
	int Status;
	XIicPs_Config *Config;

	Config = XIicPs_LookupConfig(DeviceId);
	if (NULL == Config) {
		return XST_FAILURE;
	}

	Status = XIicPs_CfgInitialize(IicInstPtr, Config, Config->BaseAddress);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	XIicPs_SetSClk(IicInstPtr, IIC_SCLK_RATE);
	return XST_SUCCESS;
}

void IIC_Write(u8 IicAddr, u8 SendData, int ByteCount) {
	SendBuffer[0] = IicAddr;
	SendBuffer[1] = SendData;
	XIicPs_MasterSendPolled(&Iic, SendBuffer, ByteCount, IIC_SLAVE_ADDR);

	/*
	 * Wait until bus is idle to start another transfer.
	 */
	while (XIicPs_BusIsBusy(&Iic)) {
		/* NOP */
	}
}

void IIC_Read(u8 IicAddr, u8 *RecvData, int ByteCount) {
	u8 RecvAddr[1];
	RecvAddr[0] = IicAddr;

	XIicPs_MasterSendPolled(&Iic, RecvAddr, 1	     , IIC_SLAVE_ADDR   );
	XIicPs_MasterRecvPolled(&Iic, RecvData, ByteCount, IIC_SLAVE_ADDR_R );
}
